// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	common "github.com/aws/amazon-ssm-agent/agent/setupcli/managers/common"
	mock "github.com/stretchr/testify/mock"

	servicemanagers "github.com/aws/amazon-ssm-agent/agent/setupcli/managers/servicemanagers"
)

// IServiceManager is an autogenerated mock type for the IServiceManager type
type IServiceManager struct {
	mock.Mock
}

// GetAgentStatus provides a mock function with given fields:
func (_m *IServiceManager) GetAgentStatus() (common.AgentStatus, error) {
	ret := _m.Called()

	var r0 common.AgentStatus
	if rf, ok := ret.Get(0).(func() common.AgentStatus); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(common.AgentStatus)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetName provides a mock function with given fields:
func (_m *IServiceManager) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetType provides a mock function with given fields:
func (_m *IServiceManager) GetType() servicemanagers.ServiceManager {
	ret := _m.Called()

	var r0 servicemanagers.ServiceManager
	if rf, ok := ret.Get(0).(func() servicemanagers.ServiceManager); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(servicemanagers.ServiceManager)
	}

	return r0
}

// IsManagerEnvironment provides a mock function with given fields:
func (_m *IServiceManager) IsManagerEnvironment() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ReloadManager provides a mock function with given fields:
func (_m *IServiceManager) ReloadManager() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StartAgent provides a mock function with given fields:
func (_m *IServiceManager) StartAgent() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StopAgent provides a mock function with given fields:
func (_m *IServiceManager) StopAgent() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
