diff --git a/agent/session/datachannel/state.go b/agent/session/datachannel/state.go
index 3a84bf20..65f91f00 100644
--- a/agent/session/datachannel/state.go
+++ b/agent/session/datachannel/state.go
@@ -50,6 +50,13 @@ type IDataChannel interface {
 
 	// @ pred Mem()
 
+	// FOR DIODON ARTIFACT ONLY:
+	// This method does not establish the Core invariant as a postcondition,
+	// therefore is unsafe to call in the Application.
+	// It leaks a pointer to the data channel state which can be used to modify
+	// the Core state outside of the Core.
+	GetStatePtr() *DataChannelState
+
 	// @ preserves Mem()
 	// @ preserves log != nil ==> acc(log.Mem(), _)
 	// @ preserves inputData != nil ==> bytes.SliceMem(inputData)
@@ -160,6 +167,10 @@ type dataChannel struct {
 	//@ ghost ioLockCanLocalSend bool
 }
 
+func (dc *dataChannel) GetStatePtr() *DataChannelState {
+	return &dc.dataChannelState
+}
+
 /*@
 type ioSpecFields struct {
 	ghost token pl.Place
diff --git a/agent/session/shell/shell.go b/agent/session/shell/shell.go
index f5f8f03b..ccdf55b8 100644
--- a/agent/session/shell/shell.go
+++ b/agent/session/shell/shell.go
@@ -182,6 +182,10 @@ func (p *ShellPlugin) Execute(
 
 	log := p.context.Log()
 	p.dataChannel = dataChannel
+
+	state := dataChannel.GetStatePtr()
+	println(state)
+
 	defer func() {
 		if err := p.stop(log); err != nil {
 			log.Errorf("Error occurred while closing pty: %v", err)
